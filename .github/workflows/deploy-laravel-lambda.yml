name: Deploy to EC2 (Laravel)

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set release name
        id: rel
        run: echo "RELEASE=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Add EC2 host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.EC2_PORT }}" -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload code to EC2 (release dir)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: |
            .
            !.git/
            !node_modules/
            !vendor/
            !storage/
            !.env
            !tests/
          target: ${{ secrets.EC2_PATH }}/releases/${{ env.RELEASE }}

      - name: Run remote deploy steps
        uses: appleboy/ssh-action@v1.0.3
        env:
          RELEASE: ${{ env.RELEASE }}
          APP_PATH: ${{ secrets.EC2_PATH }}

        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script_stop: true
          script: |
            set -e
            RELEASE_DIR="$APP_PATH/releases/$RELEASE"
            SHARED_DIR="$APP_PATH/shared"
            CURRENT_LINK="$APP_PATH/current"

            # ensure shared dirs exist
            mkdir -p "$SHARED_DIR/storage" "$SHARED_DIR/bootstrap/cache"

            # link shared .env & storage into this release
            ln -sfn "$SHARED_DIR/.env" "$RELEASE_DIR/.env"
            rm -rf "$RELEASE_DIR/storage"
            ln -sfn "$SHARED_DIR/storage" "$RELEASE_DIR/storage"

            # permissions (www-data runs php-fpm/nginx on Ubuntu)
            chgrp -R www-data "$SHARED_DIR/storage" "$SHARED_DIR/bootstrap/cache" || true
            chmod -R ug+rwx "$SHARED_DIR/storage" "$SHARED_DIR/bootstrap/cache" || true

            # composer on the server
            cd "$RELEASE_DIR"
            if [ -n "$COMPOSER_AUTH" ]; then
              echo "$COMPOSER_AUTH" > composer-auth.json
              export COMPOSER_AUTH=$(cat composer-auth.json)
            fi
            composer install --no-dev --prefer-dist --optimize-autoloader

            # Laravel optimize
            php artisan key:generate --force || true
            php artisan storage:link || true

            if [ "${RUN_MIGRATIONS:-true}" = "true" ]; then
              php artisan migrate --force
            fi

            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # atomically switch "current" symlink
            ln -sfn "$RELEASE_DIR" "$CURRENT_LINK"
            chown -h $USER:www-data "$CURRENT_LINK" || true

            # restart queue workers (no sudo needed)
            php artisan queue:restart || true

            # optional: reload services if this user has permission
            # sudo systemctl reload php8.1-fpm || true
            # sudo systemctl reload nginx || true

            echo "Deployed release: $RELEASE"
