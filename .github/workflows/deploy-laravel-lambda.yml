name: Deploy via SCP

on:
  push:
    branches: [main] # ❗ change branch if needed
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-production # prevents overlapping deploys
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Use the full commit SHA for the release dir (or shorten if you prefer)
      RELEASE: ${{ github.sha }}
      DEPLOY_PATH: /var/www/myapp # ❗ server base path (no trailing slash)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show what we’re sending (debug)
        run: |
          echo "Release: $RELEASE"
          ls -la

      - name: Upload via SCP (appleboy)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }} # ❗ set in repo secrets
          username: ${{ secrets.SSH_USER }} # ❗
          key: ${{ secrets.SSH_KEY }} # ❗ private key
          port: ${{ secrets.SSH_PORT }} # ❗ typically 22
          timeout: 30s
          command_timeout: 10m
          overwrite: false
          strip_components: 0
          # Include "." then exclude with leading "!"
          source: |
            .
            !.git/**
            !node_modules/**
            !vendor/**
            !storage/**
            !.env
            !tests/**
          target: ${{ env.DEPLOY_PATH }}/releases/${{ env.RELEASE }}

      # OPTIONAL: run server-side steps (composer install, build, cache, etc.)
      # Comment out what you don't need.
      - name: Activate release (symlink & basic Laravel housekeeping)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 30s
          command_timeout: 15m
          script: |
            set -euo pipefail
            BASE="${{ env.DEPLOY_PATH }}"
            REL="${BASE}/releases/${{ env.RELEASE }}"
            CUR="${BASE}/current"

            echo "Ensuring base directories exist…"
            mkdir -p "${BASE}/releases" "${BASE}/shared/storage" "${BASE}/shared/vendor"

            echo "Link shared storage & vendor into release…"
            rm -rf "${REL}/storage" || true
            ln -sfn "${BASE}/shared/storage" "${REL}/storage"
            ln -sfn "${BASE}/shared/vendor" "${REL}/vendor"

            # If you keep .env outside the repo:
            if [ -f "${BASE}/shared/.env" ]; then
              ln -sfn "${BASE}/shared/.env" "${REL}/.env"
            fi

            # If this is a Laravel app, you can uncomment:
            # cd "${REL}"
            # php -v || true
            # composer --version || true
            # composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction
            # php artisan storage:link || true
            # php artisan config:cache || true
            # php artisan route:cache || true
            # php artisan view:cache || true
            # php artisan migrate --force || true

            echo "Atomically switching current symlink…"
            ln -sfn "${REL}" "${CUR}"

            # Reload services if needed (uncomment as appropriate):
            # sudo systemctl reload php8.2-fpm || true
            # sudo systemctl reload nginx || true

            echo "Deployment complete: ${{ env.RELEASE }}"
